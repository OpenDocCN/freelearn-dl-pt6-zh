["```py\n----------converting data to lower case ---------- \ni am a person. do you know what is time now? \n\n```", "```py\nstem is funnier than a bummer say the sushi love comput scientist. she realli want to buy cars. she told me angrily. \n\n```", "```py\nStemming is funnier than a bummer says the sushi loving computer scientist. She really wants to buy cars. She told me angrily. \n\n```", "```py\ntext = \"\"\"Stemming is funnier than a bummer says the sushi loving computer scientist.She really wants to buy cars. She told me angrily.It is better for you. Man is walking. We are meeting tomorrow.\"\"\" \n\n```", "```py\nStemmer \nstem is funnier than a bummer say the sushi love comput scientist. she realli want to buy cars. she told me angrily. It is better for you. man is walking. We are meet tomorrow. \nVerb lemma \nStemming be funnier than a bummer say the sushi love computer scientist. She really want to buy cars. She tell me angrily. It be better for you. Man be walking. We be meet tomorrow. \nNoun lemma \nStemming is funnier than a bummer say the sushi loving computer scientist. She really want to buy cars. She told me angrily. It is better for you. Man is walking. We are meeting tomorrow. \nAdjective lemma \nStemming is funny than a bummer says the sushi loving computer scientist. She really wants to buy cars. She told me angrily. It is good for you. Man is walking. We are meeting tomorrow. \nSatellite adjectives lemma \nStemming is funny than a bummer says the sushi loving computer scientist. She really wants to buy cars. She told me angrily. It is good for you. Man is walking. We are meeting tomorrow. \nAdverb lemma \nStemming is funnier than a bummer says the sushi loving computer scientist. She really wants to buy cars. She told me angrily. It is well for you. Man is walking. We are meeting tomorrow. \n\n```", "```py\nthis is foo. \n\n```", "```py\nInput raw sentence: \"\"this is a test sentence. I am very happy today.\"\" \n--------Stop word removal from raw text--------- \ntest sentence. happy today. \n\n```", "```py\nStemming is funnier than a bummer says the sushi loving computer scientist.She really wants to buy cars. She told me angrily. It is better for you.Man is walking. We are meeting tomorrow. You really don''t know..! \n\n```", "```py\n[''Stemming'', ''is'', ''funnier'', ''than'', ''a'', ''bummer'', ''says'', ''the'', ''sushi'', ''loving'', ''computer'', ''scientist'', ''.'', ''She'', ''really'', ''wants'', ''to'', ''buy'', ''cars'', ''.'', ''She'', ''told'', ''me'', ''angrily'', ''.'', ''It'', ''is'', ''better'', ''for'', ''you'', ''.'', ''Man'', ''is'', ''walking'', ''.'', ''We'', ''are'', ''meeting'', ''tomorrow'', ''.'', ''You'', ''really'', ''do'', \"\"n''t\"\", ''know..'', ''!''] \n\n```", "```py\nInput is: wordlemma.lemmatize(''cars'')  Output is: car \nInput is: wordlemma.lemmatize(''walking'',pos=''v'') Output is: walk \nInput is: wordlemma.lemmatize(''meeting'',pos=''n'') Output is: meeting \nInput is: wordlemma.lemmatize(''meeting'',pos=''v'') Output is: meet \nInput is: wordlemma.lemmatize(''better'',pos=''a'') Output is: good \n\n```", "```py\nRegex: [ab] \n\n```", "```py\nRegex: [^ab] \n\n```", "```py\nRegex: [a-z] \n\n```", "```py\nRegex: [^a-z] \n\n```", "```py\nRegex: [a-zA-Z] \n\n```", "```py\nRegex: . \n\n```", "```py\nRegex: \\s \n\n```", "```py\nRegex: \\S \n\n```", "```py\nRegex: \\d \n\n```", "```py\nRegex: \\D \n\n```", "```py\nRegex: \\W \n\n```", "```py\nRegex: \\w \n\n```", "```py\nRegex: (a|b) \n\n```", "```py\nRegex: a? ; ? Matches  zero or one occurrence not more than 1 occurrence \n\n```", "```py\nRegex: a* ; * matches zero or more than that \n\n```", "```py\nRegex: a+ ; + matches occurrences one or more that one time \n\n```", "```py\nRegex: a{3} \n\n```", "```py\nRegex: a{3,} \n\n```", "```py\nRegex: a{3,6} \n\n```", "```py\nRegex: ^ \n\n```", "```py\nRegex: $ \n\n```", "```py\nRegex: \\b \n\n```", "```py\nRegex: \\B \n\n```", "```py\nInput: Two String, X and Y  \nOutput: cheapest possible sequences of the character edits for converting string from X to Y. D( i , j ) = minimum distance cost for converting X string to Y  \n\n```"]