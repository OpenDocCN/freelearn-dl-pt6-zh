["```py\n$ sudo apt install libboost-all-dev libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler libgflags-dev libgoogle-glog-dev liblmdb-dev\n```", "```py\n$ sudo apt install libatlas-base-dev libopenblas-dev\n```", "```py\n$ sudo apt install libboost-python-dev python-skimage python-protobuf\n```", "```py\n$ mkdir build\n$ cd build\n$ cmake ..\n$ make\n```", "```py\n$ make runtest\n```", "```py\n$ make pycaffe\n$ make install\n```", "```py\n$ head -26 models/bvlc_alexnet/deploy.prototxt\nname: \"AlexNet\"\nlayer {\n  name: \"data\"\n  type: \"Input\"\n  top: \"data\"\n  input_param { shape: { dim: 10 dim: 3 dim: 227 dim: 227 } }\n}\nlayer {\n  name: \"conv1\"\n  type: \"Convolution\"\n  bottom: \"data\"\n  top: \"conv1\"\n  param {\n    lr_mult: 1\n    decay_mult: 1\n  }\n  param {\n    lr_mult: 2\n    decay_mult: 0\n  }\n  convolution_param {\n    num_output: 96\n    kernel_size: 11\n    stride: 4\n  }\n}\n```", "```py\nmessage ConvolutionParameter {\n  optional uint32 num_output = 1; // The number of outputs for the layer\n  optional bool bias_term = 2 [default = true]; // whether to have bias \n  //terms\n\n  // Pad, kernel size, and stride are all given as a single value for equal\n  // dimensions in all spatial dimensions, or once per spatial dimension.\n  repeated uint32 pad = 3; // The padding size; defaults to 0\n  repeated uint32 kernel_size = 4; // The kernel size\n  repeated uint32 stride = 6; // The stride; defaults to 1\n  optional uint32 pad_h = 9 [default = 0]; // The padding height (2D only)\n  optional uint32 pad_w = 10 [default = 0]; // The padding width (2D only)\n\n  optional uint32 group = 5 [default = 1]; // The group size for group conv\n\n  // ... Omitted other details.\n  // ... Find all details in caffe.proto\n}\n```", "```py\n$ python scripts/download_model_binary.py models/bvlc_alexnet/\n```", "```py\nname: \"AlexNet\"\nop {\n  input: \"data\"\n  input: \"conv1_w\"\n  input: \"conv1_b\"\n  output: \"conv1\"\n  type: \"Conv\"\n  arg {\n    name: \"stride\"\n    i: 4\n  }\n  arg {\n    name: \"pad\"\n    i: 0\n  }\n  arg {\n    name: \"kernel\"\n    i: 11\n  }\n}\n```", "```py\n// Operator Definition.\nmessage OperatorDef {\n  repeated string input = 1; // the name of the input blobs\n  repeated string output = 2; // the name of output top blobs\n  optional string name = 3; // the operator name. This is optional.\n  // the operator type. This is needed to create the object from the \n  //operator\n  // registry.\n  optional string type = 4;\n  repeated Argument arg = 5;\n\n  // The device option that the operator should run under.\n  optional DeviceOption device_option = 6;\n\n  // Optionally, one can specify an engine when there are multiple\n  // implementations available simultaneously for one device type.\n  // If one specifies an engine but that engine does not exist in the \n  //compiled\n  // Caffe2 binary, Caffe2 will fall back to the default engine of that \n  //device\n  // type.\n  optional string engine = 7;\n\n  // ... Omitted other details.\n  // ... Find all details in caffe2.proto\n}\n```", "```py\n$ python python/caffe_translator.py path_to_caffe/models/bvlc_alexnet/deploy.prototxt path_to_caffe/models/bvlc_alexnet/bvlc_alexnet.caffemodel --init_net init_net.pb --predict_net predict_net.pb\n```"]