- en: '*Preface*'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: About
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This section briefly introduces the author, the coverage of this book, the technical
    skills you'll need to get started, and the hardware and software requirements
    required to complete all of the included activities and exercises.
  prefs: []
  type: TYPE_NORMAL
- en: About the Book
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Artificial Vision and Language Processing for Robotics* begins by discussing
    the theory behind robots. You’ll compare different methods used to work with robots
    and explore computer vision, its algorithms, and limits. You’ll then learn how
    to control the robot with natural language processing commands. As you make your
    way through this book, you’ll study Word2Vec and GloVe embedding techniques, non-numeric
    data, as well as recurrent neural networks (RNNs) and their advanced models. You’ll
    create a simple Word2Vec model with Keras, build a convolutional neural network
    (CNN), and improve it with data augmentation and transfer learning. You’ll walk
    through ROS and build a conversational agent to manage your robot. You’ll also
    integrate your agent with ROS and convert an image to text and text to speech.
    You’ll learn how to build an object recognition system with the help of a video
    clip.'
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this book, you’ll have the skills you need to build a functional
    application that can integrate with ROS to extract useful information from your
    environment.
  prefs: []
  type: TYPE_NORMAL
- en: About the Authors
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Álvaro Morena Alberola** is a computer engineer and loves robotics and artificial
    intelligence. Currently, he is working as a software developer. He is extremely
    interested in the core part of AI, which is based on artificial vision. Álvaro
    likes working with new technologies and learning how to use advanced tools. He
    perceives robotics as a way of easing human lives; a way of helping people perform
    tasks that they cannot do on their own.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Gonzalo Molina Gallego** is a computer science graduate and specializes in
    artificial intelligence and natural language processing. He has experience of
    working on text-based dialog systems, creating conversational agents, and advising
    good methodologies. Currently, he is researching new techniques on hybrid-domain
    conversational systems. Gonzalo thinks that conversational user interfaces are
    the future.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Unai Garay Maestre** is a computer science graduate and specializes in the
    field of artificial intelligence and computer vision. He successfully contributed
    to the CIARP conference of 2018 with a paper that takes a new approach to data
    augmentation using variational autoencoders. He also works as a machine learning
    developer using deep neural networks applied to images.'
  prefs: []
  type: TYPE_NORMAL
- en: Objectives
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Explore ROS and build a basic robotic system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identify conversation intents with NLP techniques
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learn and use word embedding with Word2Vec and GloVe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use deep learning to implement artificial intelligence (AI) and object recognition
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Develop a simple object recognition system using CNNs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrate AI with ROS to enable your robot to recognize objects
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Audience
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Artificial Vision and Language Processing for Robotics* is for robotics engineers
    who want to learn how to integrate computer vision and deep learning techniques
    to create complete robotic systems. It will be beneficial if you have a working
    knowledge of Python and a background in deep learning. Knowledge of ROS is a plus.'
  prefs: []
  type: TYPE_NORMAL
- en: Approach
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Artificial Vision and Language Processing for Robotics* takes a practical
    approach to equip you with tools for creating systems that integrate computer
    vision and NLP to control a robot. The book is divided into three parts: NLP,
    computer vision, and robotics. It introduces advanced topics after a detailed
    introduction to the basics. It also contains multiple activities for you to practice
    and apply your new skills in a highly relevant context.'
  prefs: []
  type: TYPE_NORMAL
- en: Minimum Hardware Requirements
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For the optimal student experience, we recommend the following hardware configuration:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Processor: 2GHz dual core processor or better'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Memory: 8 GB RAM'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Storage: 5 GB available hard disk space'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A good internet connection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To train neural networks, we recommend using **Google Colab**. But if you want
    to train these networks with your computer, you will need:'
  prefs: []
  type: TYPE_NORMAL
- en: NVIDIA GPU
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Software Requirements
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We don’t recommend using Ubuntu 16.04 for this book because of compatibility
    issues with ROS Kinetic. But if you want to use Ubuntu 18.04, there is a version
    that is ROS supported, named Melodic. During the project, you will need to install
    several libraries to complete all of the exercises, such as `NLTK` (<= 3.4), `spaCy`
    (<=2.0.18), `gensim` (<=3.7.0), `NumPy` (<=1.15.4), `sklearn` (<=0.20.1), `Matplotlib`
    (<=3.0.2), `OpenCV` (<=4.0.0.21), `Keras` (<=2.2.4), and `Tensorflow` (<=1.5,
    >=2.0). The installation process for each library is explained in the exercises.
  prefs: []
  type: TYPE_NORMAL
- en: To use YOLO in your Ubuntu system, you will need to install the **NVIDIA** drivers
    of your GPU and the NVIDIA **CUDA** toolkit.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "With
    the `TfidfVectorizer` method, we can convert the collection of documents in our
    corpus to a matrix of TF-IDF features"'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'New terms and important words are shown in bold. Words that you see on the
    screen, for example, in menus or dialog boxes, appear in the text like this: "**Morphological
    analysis**: Focused on the words of a sentence and analyzing its morphemes"'
  prefs: []
  type: TYPE_NORMAL
- en: Installation and Setup
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Before you start this book, you need to install the following software. You
    will find the steps to install these here:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Installing Git LFS**'
  prefs: []
  type: TYPE_NORMAL
- en: In order to download all the resources from the GitHub of this book and be able
    to use images to train your neural network model, you will need to install **Git
    LFS** (Git Large File Storage). It replaces large files such as audio samples,
    videos, datasets, and graphics with text pointers inside Git.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have not cloned the repository:'
  prefs: []
  type: TYPE_NORMAL
- en: Install Git LFS
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Clone the Git repository
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From the repository folder, execute `gitlfs pull`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Done
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If the repository is already cloned:'
  prefs: []
  type: TYPE_NORMAL
- en: Install Git LFS
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'From the repository folder, execute: `gitlfs pull`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Done
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Installing Git LFS: [https://github.com/git-lfs/git-lfs/wiki/Installation](https://github.com/git-lfs/git-lfs/wiki/Installation)'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Recommended] Google Colaboratory**'
  prefs: []
  type: TYPE_NORMAL
- en: If you have the option, use Google Colaboratory. It is a free Jupyter notebook
    environment that requires no setup and runs entirely in the cloud. You can also
    take advantage of running it on a GPU.
  prefs: []
  type: TYPE_NORMAL
- en: 'The steps for using it are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Upload the entire GitHub to your Google Drive account, so you can use the files
    that are stored in the repository. Make sure you have made use of Git LFS first
    to load all the files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to the folder where you want to open a new Google Colab Notebook, click New
    > More > Colaboratory. Now, you have a Google Colab Notebook opened and saved
    in the corresponding folder, and you are ready to use Python, Keras, or any other
    library that is already installed.![](img/C13550_Preface_01.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you want to install a specific library, you can do so using the “pip” package
    installation or any other command-line installation and adding “!” at the beginning.
    For instance, “!pip install sklearn”, which would install scikit-learn.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If you want to be able to load files from your Google Drive, you need to execute
    these two lines of code in a Google Colab cell:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Then, open the link that appears in the output and log in with the Google account
    that you used to create the Google Colab Notebook.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can now navigate to where the files were uploaded using `ls` to list the
    files in the current directory and `cd` to navigate to a specific folder:![](img/C13550_Preface_02.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, the Google Colab Notebook is capable of loading any file and performing
    any task, just like a Jupyter notebook opened in that folder would do.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Installing ROS Kinetic**'
  prefs: []
  type: TYPE_NORMAL
- en: 'These are the steps you must follow to install the framework in your Ubuntu
    system:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Prepare Ubuntu for accepting the ROS software:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Configure the download keys:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Ensure that the system is updated:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Install the full framework to not miss functionalities:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Initialize and update `rosdep`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Add environment variables to the `bashrc` file if you want to avoid declaring
    them each time you work with ROS:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
- en: It might be appropriate to reboot your computer after this process for the system
    to implement the new configuration.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Check that the framework is correctly working by starting it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**Configuring TurtleBot**'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: It may happen that TurtleBot is not compatible with your ROS distribution (we
    are using Kinetic Kame), but don’t worry, there are lots of robots that you can
    simulate in Gazebo. You can look up different robots and try to use them with
    your ROS distribution.
  prefs: []
  type: TYPE_NORMAL
- en: 'This is the configuration process for TurtleBot:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Install its dependencies:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Download the TurtleBot simulator package in your `catkin` workspace:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: After that, you should be able to use TurtleBot with Gazebo.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you get an error trying to visualize TurtleBot in Gazebo, download the `turtlebot_simulator`
    folder from our GitHub and replace it.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Start ROS services:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Launch TurtleBot World:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**Basic Installation of Darknet**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these steps for installing Darknet:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Download the framework:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Switch to the downloaded folder and run the compilation command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'You should see an output like the following if the compilation process was
    correctly completed:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](img/C13550_Preface_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The Darknet compilation output
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: '**Advanced Installation of Darknet**'
  prefs: []
  type: TYPE_NORMAL
- en: 'This is the installation process that you must complete in order to achieve
    the chapter objectives. It will allow you to use GPU computation to detect and
    recognize objects in real time. Before performing this installation, you must
    have some dependencies installed on your Ubuntu system, such as:'
  prefs: []
  type: TYPE_NORMAL
- en: '**NVIDIA drivers**: Drivers that will allow your system to correctly work with
    your GPU. As you may know, it must be an NVIDIA model.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CUDA**: This is an NVIDIA toolkit that provides a development environment
    for building applications that need GPU usage.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**OpenCV**: This is a free artificial vision library, which is very useful
    for working with images.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
- en: It is important to consider that all these dependencies are available in several
    versions. You must find the version of each tool that is compatible with your
    specific GPU and system.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Once your system is ready, you can perform the advanced installation:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Download the framework if you didn’t do the basic installation:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Modify the Makefile first lines to enable OpenCV and CUDA. It should be as
    follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Save Makefile changes, switch to `darknet` directory and run the compilation
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Now, you should see an output similar to this one:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](img/C13550_Preface_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The Darknet compilation with CUDA and OpenCV
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: '**Installing YOLO**'
  prefs: []
  type: TYPE_NORMAL
- en: Before performing this installation, you must have some dependencies installed
    on your Ubuntu system, as mentioned in the *advanced installation of Darknet.*
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: It is important to take into account that all these dependencies are available
    in several versions. You must find the version of each tool that is compatible
    with your specific GPU and system.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once your system is ready, you can perform the advanced installation:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Download the framework:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Modify the Makefile first lines to enable OpenCV and CUDA. It should be as
    follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Save Makefile changes, switch to the darknet directory, and run the compilation
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Additional Resources
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The code bundle for this book is also hosted on GitHub at: [https://github.com/PacktPublishing/Artificial-Vision-and-Language-Processing-for-Robotics](https://github.com/PacktPublishing/Artificial-Vision-and-Language-Processing-for-Robotics).'
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: 'Links to documentation:'
  prefs: []
  type: TYPE_NORMAL
- en: ROS Kinetic - [http://wiki.ros.org/kinetic/Installation](http://wiki.ros.org/kinetic/Installation)
  prefs: []
  type: TYPE_NORMAL
- en: Git Large File Storage - [https://git-lfs.github.com/](https://git-lfs.github.com/)
  prefs: []
  type: TYPE_NORMAL
