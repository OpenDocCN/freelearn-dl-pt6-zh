["```py\nModelSerializer.writeModel(net, new File(System.getProperty(\"user.home\") + \"/minist-model.zip\"), true)\n```", "```py\ngroupId = org.deeplearning4j\n artifactId = deeplearning4j-ui_2.11\n version = 0.9.1\n```", "```py\nval uiServer = UIServer.getInstance()\n```", "```py\nval statsStorage:StatsStorage = new InMemoryStatsStorage()\n```", "```py\nval statsStorage:StatsStorage = new FileStatsStorage(file)\n```", "```py\nval listenerFrequency = 1\nnet.setListeners(new StatsListener(statsStorage, listenerFrequency))\n```", "```py\nuiServer.attach(statsStorage)\n```", "```py\nhttp://localhost:<ui_port>/\n```", "```py\n-Dorg.deeplearning4j.ui.port=9999\n```", "```py\nval sparkNet = new SparkDl4jMultiLayer(sc, conf, tm)\n```", "```py\nval ss:StatsStorage = new FileStatsStorage(new File(\"NetworkTrainingStats.dl4j\"))\n sparkNet.setListeners(ss, Collections.singletonList(new StatsListener(null)))\n```", "```py\nval statsStorage:StatsStorage = new FileStatsStorage(\"NetworkTrainingStats.dl4j\")\n val uiServer = UIServer.getInstance()\n uiServer.attach(statsStorage)\n```", "```py\nval uiServer = UIServer.getInstance()\n```", "```py\nuiServer.enableRemoteListener()\n```", "```py\ngroupId = org.deeplearning4j\n artifactId = deeplearning4j-ui_2.11\n version = 0.9.1\n```", "```py\nval sparkNet = new SparkDl4jMultiLayer(sc, conf, tm)\n val remoteUIRouter:StatsStorageRouter = new RemoteUIStatsStorageRouter(\"http://UI_HOST_IP:UI_HOST_PORT\")\n sparkNet.setListeners(remoteUIRouter, Collections.singletonList(new StatsListener(null)))\n```", "```py\ngroupId = org.deeplearning4j\n artifactId = deeplearning4j-ui-model\n version = 0.9.1\n```", "```py\nval conf = new NeuralNetConfiguration.Builder()\n ...\n     .updater(Updater.NESTEROVS)\n```"]