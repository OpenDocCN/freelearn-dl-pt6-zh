["```py\n['I', 'enjoy', 'playing', 'the', 'piano']\n```", "```py\n['I_PRO', 'enjoy_V', 'playing_V', 'the_DT', piano_N']\n```", "```py\n    jupyter notebook\n    ```", "```py\n    import nltk\n    nltk.download('punkt')\n    nltk.download('averaged_perceptron_tagger')\n    nltk.download('tagsets')\n    ```", "```py\n    s = 'i enjoy playing the piano'\n    ```", "```py\n    tokens = nltk.word_tokenize(s)\n    ```", "```py\n    tags = nltk.pos_tag(tokens)\n    tags\n    ```", "```py\n    nltk.help.upenn_tagset(\"NN\")\n    ```", "```py\n    sent = 'and so i said im going to play the piano for the play tonight'\n    ```", "```py\n    tagset = nltk.pos_tag(nltk.word_tokenize(sent))\n    tagset\n    ```", "```py\n    import spacy\n    ```", "```py\n    nlp = spacy.load('en_core_web_sm')\n    ```", "```py\n    doc = nlp(u\"and so i said i'm going to play the piano for the play tonight\")\n    ```", "```py\n    for token in doc:\n        print(token.text, token.pos_, token.tag_)\n    ```", "```py\nspacy.explain(\"VBZ\")\n```", "```py\n'verb, 3rd person singular present'\n```", "```py\n    rule = r\"\"\"Noun Phrase: {<DT>?<JJ>*<NN>}\"\"\"\n    ```", "```py\n    chunkParser = nltk.RegexpParser(rule)\n    ```", "```py\n    chunked = chunkParser.parse(tagset)\n    chunked.draw()\n    ```", "```py\n    a = \"the beautiful butterfly flew away into the night sky\"\n    ```", "```py\n    tagged = nltk.pos_tag(nltk.word_tokenize(a))\n    ```", "```py\n    chunked2 = chunkParser.parse(tagged)\n    chunked2.draw()              \n    ```", "```py\n    doc = nlp(u\"the beautiful butterfly flew away into the night sky\")\n    ```", "```py\n    for chunk in doc.noun_chunks:\n        print(chunk.text, chunk.root.text, chunk.root.dep_)\n    ```", "```py\n    rule = r\"\"\"Chink: {<.*>+}\n                        }<VB.?|CC|RB|JJ|IN|DT|TO>+{\"\"\"\n    ```", "```py\n    chinkParser = nltk.RegexpParser(rule)\n    ```", "```py\n    chinked = chinkParser.parse(tagset)\n    chinked.draw()\n    ```", "```py\n    nltk.download('treebank')\n    tagged = nltk.corpus.treebank.tagged_sents()\n    ```", "```py\n    ex = \"Shubhangi visited the Taj Mahal after taking a SpiceJet flight from Pune.\"\n    ```", "```py\n    tags = nltk.pos_tag(nltk.word_tokenize(ex))\n    ```", "```py\n    ne = nltk.ne_chunk(tags, binary = True)\n    ne.draw()\n    ```", "```py\n    ner = nltk.ne_chunk(tags, binary = False)\n    ner.draw()\n    ```", "```py\n    doc = nlp(u\"Shubhangi visited the Taj Mahal after taking a SpiceJet flight from Pune.\")\n    ```", "```py\n    for ent in doc.ents:\n        print(ent.text, ent.label_)\n    ```", "```py\n    doc1 = nlp(u\"Shubhangi Hora visited the Taj Mahal after taking a SpiceJet flight from Pune.\")\n    ```", "```py\n    for ent in doc1.ents:\n        print(ent.text, ent.label_)\n    ```"]