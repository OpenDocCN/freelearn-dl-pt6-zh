["```py\n    cd <darknet_path>\n    wget https://pjreddie.com/media/files/yolov3.weights\n    ```", "```py\n./darknet detect cfg/yolov3.cfg yolov3.weights dog.jpg\n```", "```py\n./darknet detect cfg/yolov3.cfg yolov3.weights\n```", "```py\n./darknet detect cfg/yolov3.cfg yolov3.weights dog2.jpg -thresh 0.5\n```", "```py\n    ./darknet detect cfg/yolov3.cfg yolov3.weights dog2.jpg -thresh 0.7\n    ```", "```py\n    ./darknet detector demo cfg/coco.data cfg/yolov3.cfg yolov3.weights\n    ```", "```py\ngit clone https://github.com/pjreddie/darknet\ncd darknet\nmake\n```", "```py\n    #!usr/bin/env python\n    import sys, os\n    ```", "```py\n    sys.path.append(os.path.join(os.getcwd(),'python/'))\n    import darknet as dn\n    ```", "```py\n    dn.set_gpu(0)\n    ```", "```py\n    net = dn.load_net(\"cfg/yolov3.cfg\", \"yolov3.weights\", 0)\n    meta = dn.load_meta(\"cfg/coco.data\")\n    ```", "```py\n    dog_images = 0\n    number_of_images = 0\n    ```", "```py\n    for file in os.listdir(\"dataset/\"):\n    ```", "```py\n        filename = \"dataset/\" + file\n        r = dn.detect(net, meta, filename)\n    ```", "```py\n        for obj in r:\n            if obj[0] == \"dog\":\n                dog_images += 1\n                break\n        number_of_images += 1\n    ```", "```py\n    print(\"There are \" + str(dog_images) + \"/\" + str(number_of_images) + \" images containing dogs\")\n    ```", "```py\n    cd ..\n     wget https://pjreddie.com/media/files/yolov3.weights\n    python exercise28.py\n    ```", "```py\n    cd ~/catkin_ws/\n    source devel/setup.bash\n    roscore\n    cd src\n    catkin_create_pkg exercise29 rospy cv_bridge geometry_msgs image_transport sensor_msgs std_msgs\n    ```", "```py\n    cd exercise29\n    mkdir scripts\n    cd scripts\n    touch exercise29.py\n    chmod +x exercise29.py\n    ```", "```py\n    import sys\n    import os\n    from cv_bridge import CvBridge, CvBridgeError\n    from sensor_msgs.msg import Image\n    ```", "```py\n    sys.path.append(os.path.join(os.getcwd(), '/home/alvaro/Escritorio/tfg/darknet/python/'))\n    ```", "```py\n    import darknet as dn\n    ```", "```py\n    class Exercise29():\n        def __init__(self):\n    ```", "```py\n            rospy.init_node('Exercise29', anonymous=True)\n    ```", "```py\n            self.bridge = CvBridge()\n    ```", "```py\n            self.image_sub = rospy.Subscriber(\"camera/rgb/image_raw\", Image, self.imageCallback)\n    ```", "```py\n            self.imageToProcess = None\n    ```", "```py\n            cfgPath =  \"/home/alvaro/Escritorio/tfg/darknet/cfg/yolov3.cfg\"\n            weightsPath = \"/home/alvaro/Escritorio/tfg/darknet/yolov3.weights\"\n            dataPath = \"/home/alvaro/Escritorio/tfg/darknet/cfg/coco2.data\"\n    ```", "```py\n            self.net = dn.load_net(cfgPath, weightsPath, 0)\n            self.meta = dn.load_meta(dataPath)\n    ```", "```py\n            self.fileName = 'predict.jpg'\n    ```", "```py\n        def imageCallback(self, data):\n            self.imageToProcess = self.bridge.imgmsg_to_cv2(data, \"bgr8\")\n    ```", "```py\n        def run(self):\n            while not rospy.core.is_shutdown():\n                if(self.imageToProcess is not None):\n                    cv2.imwrite(self.fileName, self.imageToProcess)\n                    r = dn.detect(self.net, self.meta, self.fileName)\n                    print r\n    ```", "```py\n    if __name__ == '__main__':\n        dn.set_gpu(0)\n        node = Exercise29()\n        try:\n            node.run()\n        except rospy.ROSInterruptException:\n            pass\n    ```", "```py\n    cd ../../\n    cd ..\n    source devel/setup.bash\n    roscore\n    ```", "```py\n    cd ~/catkin_ws\n    source devel/setup.bash\n    roslaunch turtlebot_gazebo turtlebot_world.launch\n    ```", "```py\n    cd ~/catkin_ws\n    source devel/setup.bash\n    rosrun exercise29 exercise29.py\n    ```"]