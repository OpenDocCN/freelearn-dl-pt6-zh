["```py\nfrom   math   import  e\n```", "```py\ndef sigmoid ( x ):    \n    return 1 / ( 1 + e **- x )\n```", "```py\nsigmoid(-10) \n4.539786870243442e-05\n```", "```py\nsigmoid(10000)  \n1.0\n```", "```py\nfrom numpy import log  \n```", "```py\ndef cross_entropy(y,a): \n    return -1 *(y*log(a)+(1-y)*log (1-a))\n```", "```py\ncross_entropy(0, 0.01)\n```", "```py\n0.010050335853501451\n```", "```py\ncross_entropy(1000,999.99) \n```", "```py\n0.010050335853501451\n```", "```py\ncross_entropy(0,0.9) \n```", "```py\n2.3025850929940459\n```", "```py\n     from math import exp \n```", "```py\n    a=[-1.0,1.0,5.0]\n\n```", "```py\nexp(a[0]) # taking the first element of a[-1,1,5] which represents A\n\n0.36787944117144233\n```", "```py\nexp(a[0]) # taking the second element of a[-1,1,5] which represents B\n\n2.718281828459045\n```", "```py\nexp(a[2]) \n# taking the third element of a[-1,1,5] which represents C\n\n148.4131591025766\n```", "```py\nsigma = exp ( a [ 0 ]) + exp ( a [ 1 ]) + exp ( a [ 2 ]) \nsigma\n\n151.49932037220708\n```", "```py\nexp(a[0])/sigma\n\n0.0024282580295913376\n```", "```py\nexp(a[2])/sigma\n\n0.9796292071670795\n```"]